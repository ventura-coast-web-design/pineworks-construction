@use "variables" as *;

// Responsive breakpoint mixin
@mixin responsive($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

// Container mixin
@mixin container($max-width: 80rem) {
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-lg;
}

// Button mixin
@mixin button($bg-color: $color-secondary, $text-color: $color-primary, $hover-bg: $color-accent) {
  display: inline-block;
  padding: $spacing-sm $spacing-lg;
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: 0.375rem;
  font-weight: 600;
  text-decoration: none;
  transition: background-color 0.3s ease;
  cursor: pointer;
  
  &:hover {
    background-color: $hover-bg;
  }
}

// Card mixin
@mixin card($bg-color: white, $shadow: 0 4px 6px rgba(0, 0, 0, 0.1)) {
  background-color: $bg-color;
  border-radius: 0.5rem;
  box-shadow: $shadow;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
}

// Section mixin
@mixin section($padding: $spacing-2xl, $bg-color: transparent) {
  padding: $padding $spacing-lg;
  background-color: $bg-color;
  
  .container {
    @include container;
  }
}

// Grid mixin
@mixin grid($columns: 1, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
  
  @media (max-width: $breakpoint-md) {
    grid-template-columns: 1fr;
  }
}

// Flex center mixin
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Text gradient mixin
@mixin text-gradient($color1: $color-primary, $color2: $color-secondary) {
  background: linear-gradient(135deg, $color1, $color2);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Hover lift effect
@mixin hover-lift($distance: -4px) {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  
  &:hover {
    transform: translateY($distance);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
} 